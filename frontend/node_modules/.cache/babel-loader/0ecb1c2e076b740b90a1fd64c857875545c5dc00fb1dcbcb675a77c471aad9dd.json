{"ast":null,"code":"import * as React from 'react';\nfunction getShowCollapsibleIcon(prev, next) {\n  if (prev.collapsible && next.collapsible) {\n    if (prev.showCollapsibleIcon === true || next.showCollapsibleIcon === true) {\n      return true;\n    }\n    if (prev.showCollapsibleIcon === 'auto' || next.showCollapsibleIcon === 'auto') {\n      return 'auto';\n    }\n    return false;\n  }\n  if (prev.collapsible) {\n    return prev.showCollapsibleIcon;\n  }\n  if (next.collapsible) {\n    return next.showCollapsibleIcon;\n  }\n  return false;\n}\nexport default function useResizable(items, pxSizes, isRTL) {\n  return React.useMemo(() => {\n    const resizeInfos = [];\n    for (let i = 0; i < items.length - 1; i += 1) {\n      const prevItem = items[i];\n      const nextItem = items[i + 1];\n      const prevSize = pxSizes[i];\n      const nextSize = pxSizes[i + 1];\n      const {\n        resizable: prevResizable = true,\n        min: prevMin,\n        collapsible: prevCollapsible\n      } = prevItem;\n      const {\n        resizable: nextResizable = true,\n        min: nextMin,\n        collapsible: nextCollapsible\n      } = nextItem;\n      const mergedResizable =\n      // Both need to be resizable\n      prevResizable && nextResizable && (\n      // Prev is not collapsed and limit min size\n      prevSize !== 0 || !prevMin) && (\n      // Next is not collapsed and limit min size\n      nextSize !== 0 || !nextMin);\n      const prevEndCollapsible = !!prevCollapsible.end && prevSize > 0;\n      const nextStartExpandable = !!nextCollapsible.start && nextSize === 0 && prevSize > 0;\n      const startCollapsible = prevEndCollapsible || nextStartExpandable;\n      const nextStartCollapsible = !!nextCollapsible.start && nextSize > 0;\n      const prevEndExpandable = !!prevCollapsible.end && prevSize === 0 && nextSize > 0;\n      const endCollapsible = nextStartCollapsible || prevEndExpandable;\n      const showStartCollapsibleIcon = getShowCollapsibleIcon({\n        collapsible: prevEndCollapsible,\n        showCollapsibleIcon: prevCollapsible.showCollapsibleIcon\n      }, {\n        collapsible: nextStartExpandable,\n        showCollapsibleIcon: nextCollapsible.showCollapsibleIcon\n      });\n      const showEndCollapsibleIcon = getShowCollapsibleIcon({\n        collapsible: nextStartCollapsible,\n        showCollapsibleIcon: nextCollapsible.showCollapsibleIcon\n      }, {\n        collapsible: prevEndExpandable,\n        showCollapsibleIcon: prevCollapsible.showCollapsibleIcon\n      });\n      resizeInfos[i] = {\n        resizable: mergedResizable,\n        startCollapsible: !!(isRTL ? endCollapsible : startCollapsible),\n        endCollapsible: !!(isRTL ? startCollapsible : endCollapsible),\n        showStartCollapsibleIcon: isRTL ? showEndCollapsibleIcon : showStartCollapsibleIcon,\n        showEndCollapsibleIcon: isRTL ? showStartCollapsibleIcon : showEndCollapsibleIcon\n      };\n    }\n    return resizeInfos;\n  }, [pxSizes, items]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}